# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# compiler:
#     - gcc
#     - clang

# Setting sudo to false opts in to Travis-CI container-based builds.
sudo: false

# The apt packages below are needed for sphinx builds. A full list of packages
# that can be included can be found here:
#
# https://github.com/travis-ci/apt-package-whitelist/blob/master/ubuntu-precise

addons:
    apt:
        packages:
            - graphviz
            - texlive-latex-extra
            - dvipng

env:
    global:

        # The following versions are the 'default' for tests, unless
        # overridden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - NUMPY_VERSION=stable
        - ASTROPY_VERSION=stable
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test'
        - PIP_DEPENDENCIES=''
        - EVENT_TYPE='pull_request push'

        # - SRTMDATA=${TRAVIS_BUILD_DIR}/pycraf/pathprof/tests/srtm
        - SRTMDATA=${TRAVIS_BUILD_DIR}/srtm
        - OMP_NUM_THREADS=2
        - TWINE_USERNAME=bwinkel

        # For this package-template, we include examples of Cython modules,
        # so Cython is required for testing. If your package does not include
        # Cython code, you can set CONDA_DEPENDENCIES=''
        - CONDA_DEPENDENCIES='pip wheel numpy scipy astropy pytest cython h5py matplotlib pyproj sgp4'

        # List other runtime dependencies for the package that are available as
        # pip packages here.
        # - PIP_DEPENDENCIES=''

        # Conda packages for affiliated packages are hosted in channel
        # "astropy" while builds for astropy LTS with recent numpy versions
        # are in astropy-ci-extras. If your package uses either of these,
        # add the channels to CONDA_CHANNELS along with any other channels
        # you want to use.
        - CONDA_CHANNELS='astropy-ci-extras astropy conda-forge'

        # If there are matplotlib or other GUI tests, uncomment the following
        # line to use the X virtual framebuffer.
        # - SETUP_XVFB=True

        # github pages secure key
        - secure: "c9cNFhnlRkx/J5kLiP8uEwTvPDq9hPuSQXG3qiR5+JfB0CeERwr59Vuyux3g6IXmWMwqHPhIMkohV7PtnmaxRWmO0RiGhEDIZOZ5NVI5XGCIrJYuNPJ2tJnGJ3GMDqCw+Mw49MS4xx04fS0ye0StGYbP3gmMIHwIk3LCV5DPjrmlS9t/3mOry1MKlQIqXb6JocJBHtlHtK094i91arW1UG+KEVM1Xv/sjOupHKRbQ4/2OZYGx9Kzl9aeVDCxbNUyXxLd12vJKjIn5toDbzLlFuqb2VgLg2LDMdFGcL2VnUS6MUWb4nPPn20cLKv9B/5auUWC08COMg+QJTzsGUuU8fMGlgaDgB0/geXNkwnY1vF8S19sQCUW4oAU1RjOuOYMhUlxBodz/ql+RGJ6f/mBoD+FJ9aSJ9fOb1hXosFmM9KSRNaa6PiPouWQ+Xx1foaeD5DelCO9d5ZiKR63PBJby7dq1sh0DyCbi5vcqZFwwwrut27Pb6yJmyYacvbyLpbXh3BuA5V20hoOlGdzxg+aObJLx4eArwj8BoMlYvQ1up3dk558KqSCa/KZgjgg32cdGoikRn60Yywd1fZ9dtJ+ctL20U3dA3Csg4vIW+a3r0S/evrpPSTzjXxVxaqi669Svw1Hj0OtiR4rR7y+Ph6U11BT+xSsK7N0J3DrUBKiq5I="

    # matrix:
    #     # Make sure that egg_info works without dependencies
    #     - PYTHON_VERSION=3.5 SETUP_CMD='egg_info'
    #     - PYTHON_VERSION=3.6 SETUP_CMD='egg_info'

matrix:

    # Don't wait for allowed failures
    fast_finish: true

    include:

        # Standard linux; also used for sdist'ing
        - os: linux
          env: SETUP_CMD='test'
               DO_DIST=YES

        # Try MacOS X
        - os: osx
          osx_image: xcode8.3
          env:
            - SETUP_CMD='test'
            - CC='gcc-6'
            - CXX='g++-6'
            - CPP='g++-6'
            - LD='gcc-6'

        # Do a coverage test.
        - os: linux
          env: SETUP_CMD='test --coverage'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - os: linux
          env:
            # - SETUP_CMD='build_docs -w'
            - SETUP_CMD='build_docs'
            - DO_DOCS=YES

        # Now try Astropy dev with the latest 3.x.
        - os: linux
          env: ASTROPY_VERSION=development
               EVENT_TYPE='pull_request push cron'

        # Try all python versions and Numpy versions. Since we can assume that
        # the Numpy developers have taken care of testing Numpy with different
        # versions of Python, we can vary Python and Numpy versions at the same
        # time.

        - os: linux
          env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.11

        # Do a PEP8 test with pycodestyle
        - os: linux
          env: MAIN_CMD='pycodestyle pycraf --count' SETUP_CMD=''

    allow_failures:
        # Do a PEP8 test with pycodestyle
        # (allow to fail unless your code completely compliant)
        - os: linux
          env: MAIN_CMD='pycodestyle pycraf --count' SETUP_CMD=''

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update          ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install gcc6; brew link --overwrite gcc@6; fi

install:

    # download SRTM data for tests
    - wget -P ${TRAVIS_BUILD_DIR}/srtm/ http://viewfinderpanoramas.org/dem3/M32.zip
    - wget -P ${TRAVIS_BUILD_DIR}/srtm/ http://viewfinderpanoramas.org/dem3/N32.zip
    - unzip ${TRAVIS_BUILD_DIR}/srtm/M32.zip -d ${TRAVIS_BUILD_DIR}/srtm/
    - unzip ${TRAVIS_BUILD_DIR}/srtm/N32.zip -d ${TRAVIS_BUILD_DIR}/srtm/
    - mv ${TRAVIS_BUILD_DIR}/srtm/{M,N}*/*.hgt ${TRAVIS_BUILD_DIR}/srtm/

    # We now use the ci-helpers package to set up our testing environment.
    # This is done by using Miniconda and then using conda and pip to install
    # dependencies. Which dependencies are installed using conda and pip is
    # determined by the CONDA_DEPENDENCIES and PIP_DEPENDENCIES variables,
    # which should be space-delimited lists of package names. See the README
    # in https://github.com/astropy/ci-helpers for information about the full
    # list of environment variables that can be used to customize your
    # environment. In some cases, ci-helpers may not offer enough flexibility
    # in how to install a package, in which case you can have additional
    # commands in the install: section below.

    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh


    # As described above, using ci-helpers, you should be able to set up an
    # environment with dependencies installed using conda and pip, but in some
    # cases this may not provide enough flexibility in how to install a
    # specific dependency (and it will not be able to install non-Python
    # dependencies). Therefore, you can also include commands below (as
    # well as at the start of the install section or in the before_install
    # section if they are needed before setting up conda) to install any
    # other dependencies.

script:
   - $MAIN_CMD $SETUP_CMD
   - echo "DO_DOCS" $DO_DOCS
   # also have to remove the c-files, generated during build
   #  --built-docs docs/_build/html/
   - 'if [[ $TRAVIS_TAG && $DO_DOCS ]]; then
       set -e;
       conda install doctr;
       git reset --hard HEAD;
       doctr deploy . --no-require-master;
     fi'

after_success:
    # If coveralls.io is set up for this package, uncomment the line below.
    # The coveragerc file may be customized as needed for your package.
    - 'if [[ $SETUP_CMD == *coverage* ]]; then
        coveralls --rcfile="pycraf/tests/coveragerc";
      fi'

    - echo "TRAVIS_TAG" $TRAVIS_TAG
    - echo "DO_DIST" $DO_DIST
    - 'if [[ $TRAVIS_TAG && $DO_DIST ]]; then
        conda install twine;
        python setup.py sdist;
        python -m twine upload dist/*.tar.gz;
      fi'
